Релация - подмножество на декартово произведение
- Приемаме че имаме стандартна наредба на атрибутите по реда на подреждане в схемата на релацията
- Редове (кортежи) - записи в таблицата със стойности от всеки домейн на съответния атрибут (колона)
- Домейни - множества от стойности. Често ограничени от типове. Атомарни са!
- Екземпляр - текущото множество стойности (кортежи) в таблицата
= Може да се изменя и е по-лесно за измяна от схемата

Обръщане на ER в Релационен модел
- Обръщаме всички entity-та в релации със съответните им атрибути
- Заместваме отношенията с релации, като за атрибути съдържа ключовите атрибути на релациите + атрибутите на отношението
= Ако даден entity set участва повече от веднъж в релацията - толкова пъти повтаряме ключовете му

- Комбиниране на релации (Ако остане време)
= При many-to-one релация можем да прехвърлим всички атрибути на релацията като атрибути на many entity-то + копие на ключа на one entity-то
User | <has a> | Pen
(one)          (many)

User(name, ...)
Pen(..., <att of has-a>, name)
== правим name nullable на Pen

- Weak sets
= Релацията на weak set включват и ключовете на тези, към които има поддържащи
= Взима и атрибутите на поддържащите отношения

- Is-a
= Три начина
1) ER метод
= за всяко entity правим релация
= в нея включвам само нейните си атрибути и добавяме ключа на корена
2) Objected-Oriented подход
= За всяко възможно поддърво, образувано от корена
= Всяко със съответните си атрибути
3) Null values
= Една обща релация със всички атрибути

- ER е по-добър при по-общи заявки
- OO е по-добър при по-конкретни заявки
- Null е най-бърз ама много null полета

- Ключове:
= За релация от entity - ключа на entity-то
= За релация от отношение:
== При many to many - ключ са всички ключове на entity-тата
== При one to many - ключ са тези на many страната
== При one to one - избираме едно от двете



Функционални зависимости
- Ограничения върху атрибутите (зависимост)
A -> B
A1 A2 ... AN -> B1
= Ако определят няколко - групираме:
A1 A2 ... AN -> B1 B2 B3 ... BM

- Ключ:
= Подмножество от атрибути, които:
1) Функционално определят всички останали атрибути
2) Няма собствено подмножество, което да е ключ
== Ако има повече от 1 такова подмножество - избира се ендо - първичен ключ

- Суперключ:
= Множество, съдържащо подмножество - ключ
= Ключовете са суперключове

- Тривиални:
= Ако този отдясно се съдържа в тези отляво

- Изчисляване на покритие за множество атрибути А1... Аn и правила S
= Покритие е множеството от всички атрибути B1... Bm, за които от множеството S следва:
A1,... An -> B1... Bm
= Започваме с X = {А1... Аn}
= Добавяме всички C, за които от X можем да го изведем с правила
= Повтаряме

Задача:
A B -> C
B C -> A D
D -> E
C E -> B
(Покритие - всички)

= В следствие на транзитивността (А1... Ан -> Б1... Бм -> Ц1... Цк) се чупи опростяването с one-to-many обединението на релации

= Ако дадено множество атрибути има покритие - всички атрибути => суперключ и някое негово подмножество е ключ

- Генериране на всички FD за дадено множество:
= За всички подмножества на атрибутите на релацията правим покритие и формираме зависимостите

- Нормални форми (намаляване на излишествата)
== 3НФ (без загуба на FD) <=> Всяка нетривиална FD е такава, че от ляво стои суперключ ИЛИ отдясно стои част от ключ (първичен АТРИБУТ (НЕ КЛЮЧ))

== НФБК (без загуба на информация) <=> Всяка нетривиална FD е такава, че от лявата страна стои суперключ
=== Всяка релация с 2 атрибута по default е в НФБК

== 4НФ (големи загуби)
=== Множествени FD - такива при които ако фиксираме част от ключа, една част от атрибутите остават фиксирани и не се променят спрямо другите (сложно за обяснение)
=== Тук не може А1...Ан ->> Б1...Бм да го разбием на А1...Ан ->> Б1
=== От А1...Ан -> Б1 следва А1...Ан ->> Б1
=== Нетривиални: А1..Ан -->> Б1..Бм - Никое Б не е сред А-тата И не всички атрибути от релацията са в А и Б
=== 4НФ - Нетривиалните FD имат отляво суперключ и нетривиалните множествени зависимости (MD) имат отляво суперключ

=== Декомпозиция - избираме максимално дълъг нарушител
=== Тези отляво на него са и в двете таблици
=== Тези отдясно са в едната
=== Тези, които ги няма никъде - в другата

Задача:
- По дадена релация и множество FD да се:
1) Изчислят всички FD
2) Кои са ключовете
4) Кои чупят 3НФ
3) Кои чупят НФБК
4) Кои чупят 4НФ
5) Декомпозиция до НФБК или 4НФ

= Ако няма FD в дадена релация за ключ се взимат всички атрибути
= Ключ се определя само от FD, не от MD!!! (При пресмятане на покритието не гледаме MD)